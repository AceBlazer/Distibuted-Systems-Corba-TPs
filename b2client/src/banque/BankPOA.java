package banque;


/**
* BankPOA.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from Bank.idl
* Wednesday, November 23, 2016 4:02:09 PM WAT
*/

public abstract class BankPOA extends org.omg.PortableServer.Servant
 implements BankOperations, org.omg.CORBA.portable.InvokeHandler
{

  // Constructors

  private static java.util.Hashtable _methods = new java.util.Hashtable ();
  static
  {
    _methods.put ("creer", new java.lang.Integer (0));
    _methods.put ("deplacer", new java.lang.Integer (1));
    _methods.put ("chercher", new java.lang.Integer (2));
    _methods.put ("supprimer", new java.lang.Integer (3));
  }

  public org.omg.CORBA.portable.OutputStream _invoke (String $method,
                                org.omg.CORBA.portable.InputStream in,
                                org.omg.CORBA.portable.ResponseHandler $rh)
  {
    org.omg.CORBA.portable.OutputStream out = null;
    java.lang.Integer __method = (java.lang.Integer)_methods.get ($method);
    if (__method == null)
      throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);

    switch (__method.intValue ())
    {
       case 0:  // Bank/creer
       {
         int id=1;
         Compte $result = null;
         $result = this.creer (id);
         out = $rh.createReply();
         CompteHelper.write (out, $result);
         out.write_long (id);
         break;
       }


  // creation d un compte
       case 1:  // Bank/deplacer
       {
         Bank target = BankHelper.read (in);
         Compte a = CompteHelper.read (in);
         Compte $result = null;
         $result = this.deplacer (target, a);
         out = $rh.createReply();
         CompteHelper.write (out, $result);
         break;
       }


  // deplacer vers un compte qui se trouve ds la banque target
       case 2:  // Bank/chercher
       {
         int id = in.read_long ();
         Compte $result = null;
         $result = this.chercher (id);
         out = $rh.createReply();
         CompteHelper.write (out, $result);
         break;
       }


  //chercher un compte apres avoir fourni un id
       case 3:  // Bank/supprimer
       {
         Compte a = CompteHelper.read (in);
         this.supprimer (a);
         out = $rh.createReply();
         break;
       }

       default:
         throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);
    }

    return out;
  } // _invoke

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:Bank:1.0"};

  public String[] _all_interfaces (org.omg.PortableServer.POA poa, byte[] objectId)
  {
    return (String[])__ids.clone ();
  }

  public Bank _this() 
  {
    return BankHelper.narrow(
    super._this_object());
  }

  public Bank _this(org.omg.CORBA.ORB orb) 
  {
    return BankHelper.narrow(
    super._this_object(orb));
  }


} // class BankPOA
